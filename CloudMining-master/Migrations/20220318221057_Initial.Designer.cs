// <auto-generated />
using System;
using CloudMining.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CloudMining.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20220318221057_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("CloudMining.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Precision")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CloudMining.Models.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("CloudMining.Models.ElectricityPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ElectricityPayments");
                });

            modelBuilder.Entity("CloudMining.Models.ElectricityPaymentShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("BaseEntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<double>("Percent")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BaseEntityId");

                    b.HasIndex("MemberId");

                    b.ToTable("ElectricityPaymentShares");
                });

            modelBuilder.Entity("CloudMining.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("CloudMining.Models.Payout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("Timestamp")
                        .HasColumnType("double");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Payouts");
                });

            modelBuilder.Entity("CloudMining.Models.PayoutShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("BaseEntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<double>("Percent")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BaseEntityId");

                    b.HasIndex("MemberId");

                    b.ToTable("PayoutShares");
                });

            modelBuilder.Entity("CloudMining.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("CloudMining.Models.PurchaseShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("BaseEntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<double>("Percent")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BaseEntityId");

                    b.HasIndex("MemberId");

                    b.ToTable("PurchaseShares");
                });

            modelBuilder.Entity("CloudMining.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Fee")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CloudMining.Models.Deposit", b =>
                {
                    b.HasOne("CloudMining.Models.Member", "Member")
                        .WithMany("Deposits")
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CloudMining.Models.ElectricityPaymentShare", b =>
                {
                    b.HasOne("CloudMining.Models.ElectricityPayment", "BaseEntity")
                        .WithMany("Shares")
                        .HasForeignKey("BaseEntityId");

                    b.HasOne("CloudMining.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("BaseEntity");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CloudMining.Models.Member", b =>
                {
                    b.HasOne("CloudMining.Models.Role", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CloudMining.Models.Payout", b =>
                {
                    b.HasOne("CloudMining.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("CloudMining.Models.PayoutShare", b =>
                {
                    b.HasOne("CloudMining.Models.Payout", "BaseEntity")
                        .WithMany("Shares")
                        .HasForeignKey("BaseEntityId");

                    b.HasOne("CloudMining.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("BaseEntity");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CloudMining.Models.PurchaseShare", b =>
                {
                    b.HasOne("CloudMining.Models.Purchase", "BaseEntity")
                        .WithMany("Shares")
                        .HasForeignKey("BaseEntityId");

                    b.HasOne("CloudMining.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("BaseEntity");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CloudMining.Models.ElectricityPayment", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("CloudMining.Models.Member", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("CloudMining.Models.Payout", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("CloudMining.Models.Purchase", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("CloudMining.Models.Role", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
